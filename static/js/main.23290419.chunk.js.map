{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","useEffect","prevCards","map","resetTurn","setTimeout","shuffleCards","shuffledCardsWithId","sort","Math","random","id","prevTurn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAEe,SAASA,EAAT,GAAgE,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAO9D,OACI,qBAAKC,UAAU,OAAf,SACI,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACI,qBAAKE,UAAU,QAAQC,IAAKL,EAAKK,IAAKC,IAAI,eAC1C,qBACIF,UAAU,OACVC,IAAI,kBACJC,IAAI,YACJC,QAdS,WAChBJ,GACDF,EAAaD,W,UCDnBQ,EAAa,CACjB,CAAC,IAAO,qBAAsBC,SAAS,GACvC,CAAC,IAAO,qBAAsBA,SAAS,GACvC,CAAC,IAAO,mBAAoBA,SAAS,GACrC,CAAC,IAAO,qBAAsBA,SAAS,GACvC,CAAC,IAAO,qBAAsBA,SAAS,GACvC,CAAC,IAAO,oBAAqBA,SAAS,IA8EzBC,MA3Ef,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOR,EAAP,KAAiBiB,EAAjB,KAEAC,qBAAU,WACJL,GAAaE,IACfE,GAAY,GAERJ,EAAUX,MAAQa,EAAUb,KAC9BQ,GAAS,SAAAS,GACP,OAAOA,EAAUC,KAAI,SAAAvB,GACnB,OAAIA,EAAKK,MAAQW,EAAUX,IAClB,2BAAIL,GAAX,IAAiBS,SAAS,IAEnBT,QAKbwB,KAEAC,YAAW,kBAAMD,MAAa,QAGjC,CAACR,EAAWE,IAEfG,qBAAU,WACRK,MACC,IAEH,IAAMA,EAAe,WACnB,IAEMC,EAFe,UAAOnB,EAAeA,GACLoB,MAAK,kBAAMC,KAAKC,SAAW,MACvBP,KAAI,SAACvB,GAAD,mBAAC,eAAcA,GAAf,IAAqB+B,GAAIF,KAAKC,cAE5Eb,EAAa,MACbE,EAAa,MACbN,EAASc,GACTZ,EAAS,IAGLd,EAAe,SAACD,GACpBgB,EAAYG,EAAanB,GAAQiB,EAAajB,IAG1CwB,EAAY,WAChBP,EAAa,MACbE,EAAa,MACbJ,GAAS,SAAAiB,GAAQ,OAAIA,EAAW,KAChCZ,GAAY,IAGd,OACE,sBAAKhB,UAAU,MAAf,UACE,6CACA,wBAAQG,QAASmB,EAAjB,sBACA,qBAAKtB,UAAU,YAAf,SACGQ,EAAMW,KAAI,SAACvB,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACNC,aAAcA,EACdC,QAASF,IAASgB,GAAahB,IAASkB,GAAalB,EAAKS,QAC1DN,SAAUA,GAJLH,EAAK+B,SAQhB,wCAAWjB,SC9EjBmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.23290419.chunk.js","sourcesContent":["import './SingleCard.css';\r\n\r\nexport default function SingleCard({ card, handleChoice, flipped, disabled }) {\r\n    const handleCoverClick = () => {\r\n        if (!disabled) {\r\n            handleChoice(card);\r\n        }        \r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className={flipped ? \"flipped\" : \"\"}>\r\n                <img className=\"front\" src={card.src} alt=\"card front\" />\r\n                <img \r\n                    className=\"back\" \r\n                    src=\"./img/cover.png\" \r\n                    alt=\"card back\" \r\n                    onClick={handleCoverClick}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\nimport SingleCard from './components/SingleCard';\nimport './App.css';\n\nconst cardImages = [\n  {\"src\": \"./img/helmet-1.png\", matched: false},\n  {\"src\": \"./img/potion-1.png\", matched: false},\n  {\"src\": \"./img/ring-1.png\", matched: false},\n  {\"src\": \"./img/scroll-1.png\", matched: false},\n  {\"src\": \"./img/shield-1.png\", matched: false},\n  {\"src\": \"./img/sword-1.png\", matched: false}\n];\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return {...card, matched: true};\n            } else {\n              return card;\n            }\n          });\n        });    \n  \n        resetTurn();    \n      } else {\n        setTimeout(() => resetTurn(), 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n\n  useEffect(() => {\n    shuffleCards();\n  }, []);\n\n  const shuffleCards = () => {\n    const duplicateImages = [...cardImages, ...cardImages];\n    const shuffledCards = duplicateImages.sort(() => Math.random() - 0.5);\n    const shuffledCardsWithId = shuffledCards.map((card) => ({...card, id: Math.random()}));    \n\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setCards(shuffledCardsWithId);\n    setTurns(0);\n  }\n\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);    \n  }\n\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurn => prevTurn + 1);\n    setDisabled(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n      <div className=\"card-grid\">\n        {cards.map((card) => (\n          <SingleCard \n            key={card.id} \n            card={card}\n            handleChoice={handleChoice}\n            flipped={card === choiceOne || card === choiceTwo || card.matched}\n            disabled={disabled}\n          />\n        ))}\n      </div>\n      <p>Turns: {turns}</p>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}